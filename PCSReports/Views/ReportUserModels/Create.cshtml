@model PCSReports.Models.ReportUserViewModel

@{
    ViewBag.Title = "User Reports";
}

<h2>User Reports</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.reportUser.username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.reportUser.username, Model.lsUser, "<-Select User->", htmlAttributes: new { @class = "form-control", @onchange = "FillReports()" })
            @Html.ValidationMessageFor(model => model.reportUser.username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Reports</label>
        <div class="col-md-10" id="BindingDiv">

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
  function FillReports() {
      var username = $('#reportUser_username').val();
    $.ajax({
        url: '/ReportUserModels/FillReport',
        type: "GET",
        dataType: "JSON",
        data: { Username: username},
        success: loadReports,
        error: function (XMLHttpRequest, textStatus, errorThrown) {

            if (XMLHttpRequest.status == 0) {
                alert(' Check Your Network.');
            } else if (XMLHttpRequest.status == 404) {
                alert('Requested URL not found.');
            } else if (XMLHttpRequest.status == 500) {
                alert('Internel Server Error.');
            } else {
                alert('Unknow Error.\n' + XMLHttpRequest.responseText);
            }
        }    });
    }
    function loadReports(result) {
        BindCheck(result.reportChks);
    }
    function BindCheck(result) {
        CreateCheckBox(result);
    }
    function CreateCheckBox(checkboxlistItems) {
        $('#BindingDiv').html('');
        //alert(checkboxlistItems);
        $('#BindingDiv').append(checkboxlistItems);
        }
</script>
}
