@model IEnumerable<PCSReports.Models.PortalMenusModel>

<ul class="navbar-nav mr-auto">
    @{ var baseMenu = Model.Where(x => x.ParentID == 0).OrderBy(x => x.Sortorder).ToList();}
    @foreach (var item in baseMenu)
    {
        if (item.RoleName.ToLower() == "all")
        {
            if (item.MenuType == "MenuItem")
            {
                <li class="nav-item">@Html.ActionLink(item.MenuName, item.ActionName, item.ControllerName,null, htmlAttributes: new { @class = "nav-link" })</li>
            }
            else
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle nav-link" data-toggle="dropdown">@item.MenuName<span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        @{ var childmenus = Model.Where(x => x.ParentID == item.ID).OrderBy(x => x.Sortorder).ToList();}
                        @foreach (var menu in childmenus)
                        {
                            if (menu.RoleName.ToLower() == "all")
                            {
                                if (menu.MenuType == "MenuItem")
                                {
                                    <li class="dropdown-item">@Html.ActionLink(menu.MenuName, menu.ActionName, menu.ControllerName, null, htmlAttributes: new { @class = "dropdown-item" })</li>
                                }
                            }
                            else
                            {
                                if ((User.Identity.IsAuthenticated) && User.IsInRole(menu.RoleName))
                                {
                                    <li class="dropdown-item">@Html.ActionLink(menu.MenuName, menu.ActionName, menu.ControllerName, null, htmlAttributes: new { @class = "dropdown-item" })</li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
        }
        else
        {
            if ((User.Identity.IsAuthenticated) && User.IsInRole(item.RoleName))
            {
                if (item.MenuType == "MenuItem")
                {
                    <li class="nav-item">@Html.ActionLink(item.MenuName, item.ActionName, item.ControllerName, null, htmlAttributes: new { @class = "nav-link" })</li>
                }
                else
                {
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle nav-link" data-toggle="dropdown">@item.MenuName<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                        @{ var childmenus = Model.Where(x => x.ParentID == item.ID).OrderBy(x => x.Sortorder).ToList();}
                        @foreach (var menu in childmenus)
                        {
                            if (menu.RoleName.ToLower() == "all")
                            {
                                if (menu.MenuType == "MenuItem")
                                {
                                    <li class="dropdown-item">@Html.ActionLink(menu.MenuName, menu.ActionName, menu.ControllerName, null, htmlAttributes: new { @class = "dropdown-item" })</li>
                                }
                            }
                            else
                            {
                                if ((User.Identity.IsAuthenticated) && User.IsInRole(menu.RoleName))
                                {
                                    <li class="dropdown-item">@Html.ActionLink(menu.MenuName, menu.ActionName, menu.ControllerName, null, htmlAttributes: new { @class = "dropdown-item" })</li>
                                }
                            }
                        }
                        </ul>
                    </li>
                }
            }
        }
    }
</ul>


